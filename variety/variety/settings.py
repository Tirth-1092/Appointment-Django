"""
Django settings for variety project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-3a0fj9szq0%@#nf9=ks9_0egkjf6vs5_@)3g#@0s8g$bl^ga(4'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    # 'baton',
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',            # For Django REST Framework
    'rest_framework_simplejwt',  # for JWT Authentication
    'djoser',                    # For Djoser
    'phonenumber_field',         # For Django PhoneNumber
    'phonenumbers',              # For PhoneNumber
    'accounts',
    'schedule',  # django-scheduler
    'appointment',
    'corsheaders',
    'baton.autodiscover',

]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'variety.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],    # <-- include your top‑level templates/
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'variety.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'VarietyDB1',
        'USER': 'postgres',
        'PASSWORD': 'dev.shivlab',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}
# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
		    'rest_framework_simplejwt.authentication.JWTAuthentication',  # For JWT Authentication	       
    ),
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter',
    ]
}

DJOSER = {
    'USER_CREATE_PASSWORD_RETYPE': True, # confirm password to prevent typos
    "USER_ID_FIELD": "username", # unique identifier for user accounts
    'SERIALIZERS': {
        'user_create': 'accounts.serializers.CustomUserCreateSerializer',
        'user': 'accounts.serializers.UserSerializer',
    },
}


SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=120),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'AUTH_HEADER_TYPES': ('JWT','Bearer'),
}

AUTH_USER_MODEL = 'accounts.User'
PHONENUMBER_DEFAULT_REGION = "IN" #Specify a Default Region

# settings.py

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = False
EMAIL_PORT = 465
EMAIL_USE_SSL = True
EMAIL_HOST_USER = 'sender22210@gmail.com'
EMAIL_HOST_PASSWORD = 'ygef nqsv itgv rwnw'
DEFAULT_FROM_EMAIL = 'sender22210@gmail.com'

INSTALLED_APPS += ['django_celery_beat']

CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers.DatabaseScheduler'

#FrontEnd
CORS_ALLOW_HEADERS = [
    'sessionid',
    'content-type',
    'x-csrftoken',
    'accept',
    'accept-encoding',
    'authorization',
    'x-requested-with',
]

CORS_ORIGIN_WHITELIST = [
    'http://localhost:3000',
]

CORS_ALLOWED_ORIGINS = [
    "http://192.168.1.81:3000",
    "http://localhost:3000",
    #"http://127.0.0.1:3000/"
]
CORS_ALLOW_ALL_ORIGINS = True

CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_METHODS = [
    "GET",
    "POST",
    "PUT",
    "PATCH",
    "DELETE",
    "OPTIONS"
]

# settings.py

CELERY_BROKER_URL = 'redis://localhost:6379/0'

# settings.py
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'level': 'DEBUG',  # Or 'INFO', 'WARNING', 'ERROR', etc.
            'class': 'logging.StreamHandler',
    },
},
'root': {
    'handlers': ['console'],
    'level': 'DEBUG',  # Set the minimum level of logs to capture
},
}

# settings.py

TIME_ZONE = 'Asia/Kolkata'
USE_TZ = True


# BATON = {
#     'SITE_HEADER': 'Saloon Appointment Company',
#     'SITE_TITLE': 'Saloon Appointment Company Admin',
#     'INDEX_TITLE': 'Admin Panel',
#     'SUPPORT_HREF': 'https://SaloonAppointment.com/support/',
#     'COPYRIGHT': 'copyright © 2025 My SaloonAppointment',
#     'POWERED_BY': '<a href="https://SaloonAppointment.com">Saloon Appointment</a>',
#     'MENU': {
#         'items': [
#             {'type': 'title', 'label': 'User Management'},
#             {'type': 'app', 'name': 'auth', 'label': 'Authentication', 'icon': 'fa fa-lock'},
#             {'type': 'app', 'name': 'accounts', 'label': 'User Accounts', 'icon': 'fa fa-user'},
            
#             {'type': 'title', 'label': 'Appointments'},
#             {'type': 'app', 'name': 'appointment', 'label': 'Appointments', 'icon': 'fa fa-calendar-check'},
#             {'type': 'app', 'name': 'schedule', 'label': 'Scheduling', 'icon': 'fa fa-calendar'},
            
#             {'type': 'title', 'label': 'Configuration'},
#             {'type': 'model', 'app': 'auth', 'name': 'user', 'label': 'Users', 'icon': 'fa fa-user'},
#             {'type': 'model', 'app': 'auth', 'name': 'group', 'label': 'Groups', 'icon': 'fa fa-users'},
#         ]
#     }
# }
# # Static files (CSS, JavaScript, Images)
# # https://docs.djangoproject.com/en/4.2/howto/static-files/

# STATIC_URL = '/static/'
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# # Extra places for collectstatic to find static files.
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, 'static'),
# ]